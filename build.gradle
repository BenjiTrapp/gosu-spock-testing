version '1.0-SNAPSHOT'

apply from: "libraries.gradle"
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "org.gosu-lang.gosu"

repositories {
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' } // for snapshots
    mavenCentral()
    jcenter()
}

buildscript {
    apply from: "libraries.gradle"

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath libs.gosuPlugin
    }
}

dependencies {
    // dependencies for gosu-lang
    compile libs.gosu

    // mandatory dependencies for using Spock
    compile libs.groovy
    testCompile libs.groovy
    compile libs.spock
    testCompile libs.spock
    testCompile files('plugins/Gosu/gclasses')
    testRuntime libs.spockreports

    // mocking stuff
    //compile libs.cglib
    testRuntime libs.bytebuddy  // allows mocking of classes (in addition to interfaces)
    testRuntime libs.objenesis  // allows mocking of classes without default constructor (together with CGLIB)

    // optional dependencies for using Spock
    testCompile libs.hamcrest   // only necessary if Hamcrest matchers are used

    // Drivers
    // testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    // testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    // using a custom version of phantomjs driver for now as the original one does not support WebDriver > 2.43.1
    //testCompile("com.codeborne:phantomjsdriver:1.4.3") {
    // phantomjs driver pulls in a different selenium version
    //    transitive = false
    //}
}

sourceSets {
    main {
        gosu {
            srcDirs = ['src/main/gosu']
            filter.include '**/*.gs', '**/*.gsx', '**/*.gst', '**/*.gsp'
        }
    }
    test {
        groovy {
            srcDirs = ['src/test/java']
        }
    }
}


task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'BuildExporter'
//  maxHeapSize = '2g'
//  debug = true
}